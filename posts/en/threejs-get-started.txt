3:I[9275,[],""]
6:I[1343,[],""]
7:I[3019,["309","static/chunks/309-21ef8e8689a270b9.js","517","static/chunks/app/posts/layout-530f5e9453ad4d4e.js"],"default",1]
8:I[7232,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
9:I[7156,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
a:I[9631,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
b:I[1733,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
c:I[9806,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
d:I[3719,["309","static/chunks/309-21ef8e8689a270b9.js","961","static/chunks/961-a457ea658aacc5a4.js","231","static/chunks/231-cba7e8247f01e444.js","428","static/chunks/428-e8a01e1da2de916a.js","185","static/chunks/app/layout-38e4366096a43954.js"],"default",1]
e:I[231,["231","static/chunks/231-cba7e8247f01e444.js","173","static/chunks/173-7f6f229095871666.js","233","static/chunks/app/posts/%5Blocale%5D/%5Bid%5D/page-d3e6779cf3a35030.js"],""]
4:["locale","en","d"]
5:["id","threejs-get-started","d"]
0:["34ojzSq_jkpGlJODY6nSx",[[["",{"children":["posts",{"children":[["locale","en","d"],{"children":[["id","threejs-get-started","d"],{"children":["__PAGE__?{\"locale\":\"en\",\"id\":\"threejs-get-started\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["posts",{"children":[["locale","en","d"],{"children":[["id","threejs-get-started","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$4","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","$L7",null,{"sx":{"maxWidth":"960px","margin":"0 auto","padding":"1rem 1rem"},"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6f4365d71611e5c0.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","$L8",null,{}],["$","$L9",null,{"sx":{"width":"100%","position":"fixed","height":"100vh","display":"block","backgroundImage":"url(/assets/background-home.jpg)","backgroundSize":"cover","backgroundPosition":"center","zIndex":-100,"::before":{"content":"\"\"","position":"absolute","top":0,"left":0,"right":0,"bottom":0,"backgroundColor":"rgba(256, 256, 256, 0.3)","zIndex":-99}}}],["$","$La",null,{"children":[["$","$Lb",null,{"sx":{"backgroundColor":"hsla(0, 0%, 100%, 0.6)","backdropFilter":"blur(8px)"},"position":"fixed","color":"default","elevation":0,"children":["$","$L7",null,{"sx":{"margin":"0 auto"},"children":["$","$Lc",null,{"disableGutters":true,"sx":{"padding":"0 2rem","height":64},"children":[["$","$Ld",null,{"variant":"h5","noWrap":true,"component":"$e","href":"/home","sx":{"mr":2,"fontWeight":700,"color":"inherit","textDecoration":"none"},"children":"i5possible"}],["$","$L9",null,{"sx":{"flexGrow":1,"display":"flex","justifyContent":"center"},"children":[["$","$Ld","Home",{"component":"$e","href":"/home","variant":"h6","sx":{"mx":2,"color":"inherit","textDecoration":"none","position":"relative","&:hover":{"color":"primary.main","&::after":{"content":"\"\"","position":"absolute","width":"100%","height":"3px","bottom":-2,"left":0,"backgroundColor":"primary.main","transition":"all 0.3s ease"}}},"children":"Home"}],["$","$Ld","Blog",{"component":"$e","href":"/en","variant":"h6","sx":{"mx":2,"color":"inherit","textDecoration":"none","position":"relative","&:hover":{"color":"primary.main","&::after":{"content":"\"\"","position":"absolute","width":"100%","height":"3px","bottom":-2,"left":0,"backgroundColor":"primary.main","transition":"all 0.3s ease"}}},"children":"Blog"}],["$","$Ld","Contact",{"component":"$e","href":"/contact","variant":"h6","sx":{"mx":2,"color":"inherit","textDecoration":"none","position":"relative","&:hover":{"color":"primary.main","&::after":{"content":"\"\"","position":"absolute","width":"100%","height":"3px","bottom":-2,"left":0,"backgroundColor":"primary.main","transition":"all 0.3s ease"}}},"children":"Contact"}]]}]]}]}]}],["$","$L9",null,{"sx":{"marginTop":8},"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]]}]}]],null],null],[null,"$Lf"]]]]
2:[["$","h1",null,{"children":"Get started with Three.js"}],["$","time",null,{"dateTime":"2024-09-05","children":"2024-09-05"}],["$","article",null,{"className":"prose","children":"$L10"}]]
f:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"i5possible"}],["$","meta","3",{"name":"description","content":"i5possible's blog"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
11:T2bbf,<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--sign" style="color: var(--sh-sign)">!</span><span class="sh__token--class" style="color: var(--sh-class)">DOCTYPE</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">html</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">html</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">lang</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">en</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">head</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">meta</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">charset</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">UTF-8</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">meta</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">name</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">viewport</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">content</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">width=device-width, initial-scale=1.0</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">title</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">Three.js Starter</span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">title</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">style</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">        body </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">margin</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">0</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">        canvas </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">display</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">block</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">style</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">head</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">body</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span></span>
<span class="sh__line"><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)"></span><span class="sh__token--jsxliterals" style="color: var(--sh-jsxliterals)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">script</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">src</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">script</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;</span><span class="sh__token--entity" style="color: var(--sh-entity)">script</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--property" style="color: var(--sh-property)">src</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--string" style="color: var(--sh-string)">app.js</span><span class="sh__token--string" style="color: var(--sh-string)">&quot;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">script</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">body</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">&lt;/</span><span class="sh__token--entity" style="color: var(--sh-entity)">html</span><span class="sh__token--sign" style="color: var(--sh-sign)">&gt;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>12:T4c6c,<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)">// Initialize Scene, Camera, and Renderer</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">scene</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">Scene</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">camera</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">PerspectiveCamera</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--class" style="color: var(--sh-class)">75</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">window</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">innerWidth</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">/</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">window</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">innerHeight</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">0</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">1</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">1000</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">renderer</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">WebGLRenderer</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">antialias</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">true</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--identifier" style="color: var(--sh-identifier)">renderer</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">setSize</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">window</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">innerWidth</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">window</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">innerHeight</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--identifier" style="color: var(--sh-identifier)">document</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">body</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">appendChild</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">renderer</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">domElement</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)">// Create a Cube</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">geometry</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">BoxGeometry</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">material</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">MeshBasicMaterial</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">color</span><span class="sh__token--sign" style="color: var(--sh-sign)">:</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">0x00ff00</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--keyword" style="color: var(--sh-keyword)">const</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cube</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--keyword" style="color: var(--sh-keyword)">new</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">THREE</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">Mesh</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">geometry</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">material</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--identifier" style="color: var(--sh-identifier)">scene</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">add</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cube</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--identifier" style="color: var(--sh-identifier)">camera</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">position</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">z</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">5</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)">// Animation Loop</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span><span class="sh__token--keyword" style="color: var(--sh-keyword)">function</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">animate</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">{</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">requestAnimationFrame</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">animate</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cube</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">rotation</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">x</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">+</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">0</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">01</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--comment" style="color: var(--sh-comment)">// Rotate the cube</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">cube</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">rotation</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">y</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--sign" style="color: var(--sh-sign)">+</span><span class="sh__token--sign" style="color: var(--sh-sign)">=</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--class" style="color: var(--sh-class)">0</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--class" style="color: var(--sh-class)">01</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--comment" style="color: var(--sh-comment)">// Rotate the cube</span></span>
<span class="sh__line"><span class="sh__token--comment" style="color: var(--sh-comment)"></span><span class="sh__token--space" style="color: var(--sh-space)">    </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">renderer</span><span class="sh__token--sign" style="color: var(--sh-sign)">.</span><span class="sh__token--property" style="color: var(--sh-property)">render</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--identifier" style="color: var(--sh-identifier)">scene</span><span class="sh__token--sign" style="color: var(--sh-sign)">,</span><span class="sh__token--space" style="color: var(--sh-space)"> </span><span class="sh__token--identifier" style="color: var(--sh-identifier)">camera</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--sign" style="color: var(--sh-sign)">}</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--break" style="color: var(--sh-break)"></span></span>
<span class="sh__line"><span class="sh__token--identifier" style="color: var(--sh-identifier)">animate</span><span class="sh__token--sign" style="color: var(--sh-sign)">(</span><span class="sh__token--sign" style="color: var(--sh-sign)">)</span><span class="sh__token--sign" style="color: var(--sh-sign)">;</span><span class="sh__token--break" style="color: var(--sh-break)"></span></span>10:[["$","p",null,{"children":"Three.js is a powerful JavaScript library for creating 3D graphics in the browser. It's beginner-friendly and allows developers to create stunning visualizations, games, and interactive experiences. This guide will help you set up a simple Three.js scene with minimal code."}],"\n",["$","h3",null,{"id":"step-1-set-up-your-project","children":[[["$","a","link-step-1-set-up-your-project",{"href":"#step-1-set-up-your-project","className":"anchor"}]],"Step 1: Set Up Your Project"]}],"\n",["$","p",null,{"children":"First, create a new folder for your project and initialize a basic HTML file."}],"\n",["$","pre",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$11"},"className":"language-html"}]}],"\n",["$","h3",null,{"id":"step-2-create-a-basic-threejs-scene","children":[[["$","a","link-step-2-create-a-basic-threejs-scene",{"href":"#step-2-create-a-basic-threejs-scene","className":"anchor"}]],"Step 2: Create a Basic Three.js Scene"]}],"\n",["$","p",null,{"children":["Create a file named ",["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">app</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--property\" style=\"color: var(--sh-property)\">js</span></span>"}}]," and add the following code to set up a basic scene:"]}],"\n",["$","pre",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$12"},"className":"language-javascript"}]}],"\n",["$","h3",null,{"id":"step-3-explanation-of-the-code","children":[[["$","a","link-step-3-explanation-of-the-code",{"href":"#step-3-explanation-of-the-code","className":"anchor"}]],"Step 3: Explanation of the Code"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Scene, Camera, and Renderer Setup:"}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">Scene</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": This creates a new scene where all objects will be placed."]}],"\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">PerspectiveCamera</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": Defines the camera view with a 75-degree field of view."]}],"\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">WebGLRenderer</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": Renders the scene using WebGL."]}],"\n"]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":"Creating a Cube:"}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">BoxGeometry</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": Defines the shape (geometry) of the cube."]}],"\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">MeshBasicMaterial</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": Defines the appearance (material) of the cube."]}],"\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">THREE</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">.</span><span class=\"sh__token--class\" style=\"color: var(--sh-class)\">Mesh</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": Combines geometry and material into a single 3D object."]}],"\n"]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":"Animation Loop:"}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"dangerouslySetInnerHTML":{"__html":"<span class=\"sh__line\"><span class=\"sh__token--identifier\" style=\"color: var(--sh-identifier)\">animate</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">(</span><span class=\"sh__token--sign\" style=\"color: var(--sh-sign)\">)</span></span>"}}],": This function runs continuously, rotating the cube and rendering the scene."]}],"\n"]}],"\n",["$","h3",null,{"id":"step-4-run-the-code","children":[[["$","a","link-step-4-run-the-code",{"href":"#step-4-run-the-code","className":"anchor"}]],"Step 4: Run the Code"]}],"\n",["$","p",null,{"children":"Simply open the HTML file in your browser, and you should see a spinning green cube!"}],"\n",["$","p",null,{"children":["$","$Le",null,{"href":"/examples/threejs-get-started","children":"Example"}]}]]
